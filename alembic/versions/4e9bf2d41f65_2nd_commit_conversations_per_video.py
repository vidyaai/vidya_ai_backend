"""2nd commit conversations per video

Revision ID: 4e9bf2d41f65
Revises: 8505b008b9c8
Create Date: 2025-08-29 16:20:14.517896

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "4e9bf2d41f65"
down_revision: Union[str, Sequence[str], None] = "8505b008b9c8"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_folders_source_type"), table_name="folders")
    op.drop_index(op.f("ix_folders_user_id"), table_name="folders")
    op.drop_table("folders")
    op.drop_index(op.f("ix_videos_folder_id"), table_name="videos")
    op.drop_index(op.f("ix_videos_source_type"), table_name="videos")
    op.drop_index(op.f("ix_videos_user_id"), table_name="videos")
    op.drop_index(op.f("ix_videos_youtube_id"), table_name="videos")
    op.drop_table("videos")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "videos",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("youtube_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("youtube_url", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("s3_key", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("thumb_key", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "transcript_s3_key", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.Column("local_path", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("transcript_text", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "transcript_json",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "formatted_transcript", sa.TEXT(), autoincrement=False, nullable=True
        ),
        sa.Column(
            "formatting_status",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "download_status",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("download_path", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("folder_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "upload_status",
            postgresql.JSONB(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["folder_id"], ["folders.id"], name=op.f("videos_folder_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("videos_pkey")),
    )
    op.create_index(
        op.f("ix_videos_youtube_id"), "videos", ["youtube_id"], unique=False
    )
    op.create_index(op.f("ix_videos_user_id"), "videos", ["user_id"], unique=False)
    op.create_index(
        op.f("ix_videos_source_type"), "videos", ["source_type"], unique=False
    )
    op.create_index(op.f("ix_videos_folder_id"), "videos", ["folder_id"], unique=False)
    op.create_table(
        "folders",
        sa.Column("id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("parent_id", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column("source_type", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"], ["folders.id"], name=op.f("folders_parent_id_fkey")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("folders_pkey")),
    )
    op.create_index(op.f("ix_folders_user_id"), "folders", ["user_id"], unique=False)
    op.create_index(
        op.f("ix_folders_source_type"), "folders", ["source_type"], unique=False
    )
    # ### end Alembic commands ###
